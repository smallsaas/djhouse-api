<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jfeat.am.module.house.services.domain.dao.QueryHouseAssetMatchLogHistoryDao">
    <sql id="Base_Column_List">
        t_house_asset_match_log_history
        .
        id
        , t_house_asset_match_log_history.owner_user_id AS ownerUserId, t_house_asset_match_log_history.owner_asset_id AS ownerAssetId, t_house_asset_match_log_history.matched_user_id AS matchedUserId, t_house_asset_match_log_history.mathched_asset_id AS mathchedAssetId, t_house_asset_match_log_history.create_time AS createTime, t_house_asset_match_log_history.org_id AS orgId, t_house_asset_match_log_history.status
    </sql>

    <sql id="QueryOwnedOrgIds">
        SELECT children.id
        FROM t_sys_org,
             t_sys_org as children
        WHERE t_sys_org.left_num &lt;= children.left_num
          AND t_sys_org.right_num >= children.left_num
          and t_sys_org.id = #{record.orgId}
        order by t_sys_org.node_level ASC
    </sql>


    <select id="queryMasterModel" resultType="HouseAssetMatchLogHistoryModel">
        SELECT t_house_asset_match_log_history.*
        FROM t_house_asset_match_log_history
        WHERE t_house_asset_match_log_history.id = #{id}
        GROUP BY t_house_asset_match_log_history.id
    </select>


    <select id="findHouseAssetMatchLogHistoryPage" resultType="HouseAssetMatchLogHistoryRecord"
            parameterType="HouseAssetMatchLogHistoryRecord">
        SELECT
        <include refid="Base_Column_List"/>


        FROM t_house_asset_match_log_history


        <if test="record.orgId > 0">
            ,(<include refid="QueryOwnedOrgIds"></include>) AS ownedOrgIds
        </if>

        WHERE 1=1
        <if test="record.orgId > 0">
            AND t_house_asset_match_log_history.org_id = ownedOrgIds.id
        </if>


        <if test="record.id != null and record.id>0 ">
            AND t_house_asset_match_log_history.id =#{record.id}
        </if>


        <if test="record.ownerUserId != null and record.ownerUserId>0 ">
            AND t_house_asset_match_log_history.owner_user_id =#{record.ownerUserId}
        </if>


        <if test="record.ownerAssetId != null and record.ownerAssetId>0 ">
            AND t_house_asset_match_log_history.owner_asset_id =#{record.ownerAssetId}
        </if>


        <if test="record.matchedUserId != null and record.matchedUserId>0 ">
            AND t_house_asset_match_log_history.matched_user_id =#{record.matchedUserId}
        </if>


        <if test="record.mathchedAssetId != null and record.mathchedAssetId>0 ">
            AND t_house_asset_match_log_history.mathched_asset_id =#{record.mathchedAssetId}
        </if>


        <if test="record.createTime != null and record.createTime>0 ">
            AND t_house_asset_match_log_history.create_time LIKE CONCAT('%',#{record.createTime},'%')
        </if>


        <if test="record.orgId != null and record.orgId>0 ">
            AND t_house_asset_match_log_history.org_id IN (<include refid="QueryOwnedOrgIds"/>)
        </if>
        <if test="record.status != null and record.status>0 ">
            AND t_house_asset_match_log_history.status LIKE CONCAT('%',#{record.status},'%')
        </if>

        <if test="startTime != null">
            <![CDATA[AND t_house_asset_match_log_history.start_time >= DATE(#{startTime})]]>
        </if>
        <if test="endTime != null">
            <![CDATA[AND t_house_asset_match_log_history.end_time <= DATE(#{endTime}]]>
        </if>
        <!--
    <if test="search != null and search != ''">
        OR t_house_asset_match_log_history.name LIKE CONCAT('%',#{search},'%')
    </if>
    -->
        ORDER BY create_time DESC
    </select>


    <insert id="batchAddHouseAssetMatchLogHistory" parameterType="java.util.List">
        insert into t_house_asset_match_log_history
        (owner_user_id,owner_asset_id,matched_user_id,mathched_asset_id,org_id,status,delete_time)
        values
        <foreach collection ="matchLogList" item="item" separator =",">
            (#{item.ownerUserId}, #{item.ownerAssetId}, #{item.matchedUserId}, #{item.mathchedAssetId}, #{item.orgId}, #{item.status}, #{item.deleteTime})
        </foreach >
    </insert>

</mapper>