server:
  port: 8080

spring:
  profiles:
    active: dev
  mvc:
    static-path-pattern: /static/**
    view:
      prefix: /WEB-INF/view
      suffix: .html
  http:
    encoding:
      force: true
      charset: UTF-8
      enabled: true
    converters:
      preferred-json-mapper: fastjson
#  jackson:
#    date-format: yyyy-MM-dd HH:mm:ss
###################  jwt配置  ###################
jwt:
  encoded-key: L7A/6zARSkK1j7Vd5SDD9pSSqZlqF7mAhiOgRbgv9Smce6tf4cJnvKOjtKPxNNnWQj+2lQEScm3XIUjhW+YVZg==
  normal-encoded-key: bm9ybWFsLWVuY29kZWQta2V5
  tll-mills: 2592000000  # 30 Days = 3600*1000*24*30
  #token-type: Bearer
  #tll-mills:
  #token-type: Bearer
  #enable-attempt-login: false

########################################################################
mybatis-plus:
  mapper-locations: classpath*:com/jfeat/**/mapping/*.xml
  typeAliasesPackage: com.jfeat.**.model
  global-config:
    id-type: 2  #0:数据库ID自增   1:用户输入id   2:全局唯一id(IdWorker)   3:全局唯一ID(uuid)  4: 该类型为未设置主键类型(none)
    db-column-underline: true
    refresh-mapper: true
    logic-delete-value: -1
    logic-not-delete-value: 1
    #sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true #配置的缓存的全局开关
    lazyLoadingEnabled: true #延时加载的开关
    multipleResultSetsEnabled: true #开启的话，延时加载一个属性时会加载该对象全部属性，否则按需加载属性
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #打印sql语句,调试用

---

spring:
  profiles: dev
  datasource:
#    url: jdbc:mysql://sh-cdb-q5vnc0iy.sql.tencentcdb.com:59449/smallsaas?autoReconnect=true&useSSL=false&useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull
    url: jdbc:mysql://localhost:3306/test?autoReconnect=true&useSSL=false&useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull
#    url: jdbc:mysql://localhost:3306/smallsaas?autoReconnect=true&useSSL=false&useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull
    username: root
    password: root
#    password: zb2014@888
    driver-class-name: com.mysql.jdbc.Driver
    filters: log4j,wall,mergeStat
    sql-script-encoding: UTF-8
    schema: classpath*:sql/**/*-schema.sql
    data: classpath*:sql/**/*-data.sql
    initialize: false
  redis:
    # redis数据库索引(默认为0)
    database: 0
    # redis服务器地址（默认为loaclhost）
    host: house.cloud.smallsaas.cn
    # redis端口（默认为6379）
    port: 6379
    # redis访问密码（默认为空）
    password: root
    # redis连接超时时间（单位毫秒）
    timeout: 0
    # redis连接池配置
    pool:
      # 最大可用连接数（默认为8，负数表示无限）
      max-active: 8
      # 最大空闲连接数（默认为8，负数表示无限）
      max-idle: 8
      # 最小空闲连接数（默认为0，该值只有为正数才有用）
      min-idle: 0
      # 从连接池中获取连接最大等待时间（默认为-1，单位为毫秒，负数表示无限）
      max-wait: -1
  kafka:
    bootstrap-servers: 106.13.216.62:9092
    producer: # producer 生产者
      retries: 0 # 重试次数
      acks: 1 # 应答级别:多少个分区副本备份完成时向生产者发送ack确认(可选0、1、all/-1)
      batch-size: 16384 # 批量大小
      buffer-memory: 33554432 # 生产端缓冲区大小
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      #      value-serializer: com.itheima.demo.config.MySerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer: # consumer消费者
      group-id: kafka-test # 默认的消费组ID
      enable-auto-commit: true # 是否自动提交offset
      auto-commit-interval: 100  # 提交offset延时(接收到消息后多久提交offset)
      # earliest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费
      # latest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，消费新产生的该分区下的数据
      # none:topic各分区都存在已提交的offset时，从offset后开始消费；只要有一个分区不存在已提交的offset，则抛出异常
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      #      value-deserializer: com.itheima.demo.config.MyDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  mail:
    host: smtp.126.com
    port: 25
    username: jiajiajia5000@126.com
    password: CFERNTQPRZYHBRXO
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
    templates:
      - operation: userAssetMatch
        templateContent: '【通知】{targetBuilding}栋{targetAsset}房的户主望与您的{building}栋{asset}房交换'
      - operation: salesAssetMatch
        templateContent: '【通知】{targetBuilding}栋{targetAsset}房的户主与{building}栋{asset}房的户主有交换意向。{targetBuilding}栋{targetAsset}房的户主信息为:名字：{targetUserName}，电话：{targetUserPhone}。{building}栋{asset}房的户主信息为：姓名：{username},电话:{userPhone}'




crud-plus:
  features:
    - eav
    - saas
    - tag

io:
  excel-template-dir: "excel-templates"



logging:
  level: debug
  file: logs/trace.log


---
